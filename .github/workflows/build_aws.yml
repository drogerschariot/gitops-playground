name: AWS Up
on: 
  push:
    branches:
      - main

env:
  TF_VAR_name: gitops-actions
  CERTBOT_EMAIL: "drogers@chariotsolutions.com"
  TF_VAR_region: us-east-1
  TF_VAR_node_type: t3.medium
  TF_VAR_node_size: 5
  TF_VAR_cluster_version: 1.28
  TF_VAR_k8s_version: 19.0.4
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_KEY}}
  AWS_DEFAULT_REGION: us-east-1
  IS_GITHUB_ACTIONS: "True"

jobs:
  aws_up:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: install terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get -y install terraform
      - name: Install kubectl
        run: curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - name: AWS Up
        run: ./aws-up.sh
        working-directory: aws-infra
      - name: sleep
        run: sleep 60
      - name: Check ArgoCD
        run: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server --namespace argocd --timeout=120s
      - name: Check Ingress
        run: kubectl wait --for=condition=ready pod -l app.kubernetes.io/component=controller --namespace ingress --timeout=120s
      - name: Check Keda
        run: kubectl wait --for=condition=ready pod -l app=keda-operator --namespace keda
      - name: Check Prometheus
        run: kubectl wait --for=condition=ready pod -l app=kube-prometheus-stack-operator --namespace monitoring
      - name: Check Cert Manager
        run: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=cert-manager --namespace cert-manager
        working-directory: aws-infra
      - name: Save TFstate file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: tfstate
          path: aws-infra/terraform.tfstate

  service_cnpg:
    runs-on: ubuntu-latest
    needs: [aws_up]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Install kubectl
        run: curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - name: Fetching AKS creds for kubectl
        run: aws eks update-kubeconfig --region $TF_VAR_region --name $TF_VAR_name-eks
      - name: Install CNPG
        run: ./cnpg-up.sh
        working-directory: services/cnpg
      - run: sleep 60
      - name: Check CNPG Operator
        run: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=cloudnative-pg --namespace cnpg-system --timeout=60s
      - name: Check CNPG Test Cluster
        run: kubectl wait --for=condition=ready pod -l cnpg.io/podRole=instance --timeout=360s -n test-db
      - name: Remove Cluster
        run: kubectl delete -f cnpg.yml
        working-directory: services/cnpg
  service_redis:
    runs-on: ubuntu-latest
    needs: [aws_up]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Install kubectl
        run: curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - name: Fetching AKS creds for kubectl
        run: aws eks update-kubeconfig --region $TF_VAR_region --name $TF_VAR_name-eks
      - name: Install Redis
        run: ./redis-up.sh
        working-directory: services/redis
      - name: Install Redis Cluster
        run: ./redis-cluster-up.sh
        working-directory: services/redis
      - name: Check Redis Master
        run: kubectl wait --for=condition=ready pod -l app.kubernetes.io/component=master -n redis
      - run: sleep 60
      - name: Check Redis Cluster
        run: kubectl wait --for=condition=ready pod -l statefulset.kubernetes.io/pod-name=redis-cluster-0 -n redis-cluster --timeout=300s
  aws_down:
    if: always()
    runs-on: ubuntu-latest
    needs: [service_redis,service_cnpg]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Install kubectl
        run: curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - name: Fetching AKS creds for kubectl
        run: aws eks update-kubeconfig --region $TF_VAR_region --name $TF_VAR_name-eks
      - name: install terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get -y install terraform
      - name: Download TFState
        uses: actions/download-artifact@v3
        with:
          name: tfstate
          path: aws-infra/
      - run: ls -la aws-infra/
      - run: sleep 120
      - name: AWS Down
        run: ./aws-down.sh
        working-directory: aws-infra
